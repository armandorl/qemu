{
	"module": {
		"MC_ME":{
			"soc": "s32g2",
			"name": "mc_me",
			"offset" : "0x40088000",
			"description": "Mode Entry Module",
			"helpers": "static unsigned int conf_control=0;\nstatic QEMUTimer timer1;\nstatic void trigger_hardware_init(void* opaque){\nS32G2mc_meState *s = S32G2_MC_ME(opaque);\nunsigned int x=0;\nconf_control=0;\nx=PERFORM_READ(REG_PRTN3_PUPD) & PERFORM_READ(REG_PRTN3_PCONF);\nPERFORM_WRITE(REG_PRTN3_STAT, x);\nPERFORM_WRITE(REG_PRTN3_PUPD, 0);timer_del(&timer1);\ntimer_deinit(&timer1);\n}\n",
			"registers": {
				"CTRL_KEY" : {
					"offset": "0x0",
					"reset": "0x5af0",
					"action": "if(conf_control==0) conf_control++;\nif(conf_control==1) {\ntimer_init_ms(&timer1, QEMU_CLOCK_VIRTUAL, trigger_hardware_init, s);\ntimer_mod(&timer1, qemu_clock_get_ms(QEMU_CLOCK_VIRTUAL) + 100);}"
				},
				"MODE_STAT" : {
					"offset": "0xC",
					"reset": "0",
					"action":"ignore"
				},
				"PRTN3_PCONF" : {
					"offset": "0x700",
					"reset": "0"
				},
				"PRTN3_PUPD" : {
					"offset": "0x704",
					"reset": "0"
				},
				"PRTN3_STAT" : {
					"offset": "0x708",
					"reset": "0",
					"action":"ignore"
				}

			},
			"size":"0x800"
		},
		"MC_CGM":{
			"soc": "s32g2",
			"name": "mc_cgm",
			"offset" : "0x40030000",
			"description": "Clock Generation Module",
			"helpers": "",
			"registers": {
				"MUX_0_CSC" : {
					"offset": "0x300",
					"reset": "0x0",
					"action": "PERFORM_WRITE(REG_MUX_0_CSC, PERFORM_READ(REG_MUX_0_CSC) & 0xFFFFFFF0); /* Auto clear */\nPERFORM_WRITE(REG_MUX_0_CSS, BIT(17));"
				},
				"MUX_0_CSS" : {
					"offset": "0x304",
					"reset": "0x80000",
					"action": "ignore"
				}

			},
			"size":"0x800"
		},
		"MC_RGM":{
			"soc": "s32g2",
			"name": "mc_rgm",
			"offset" : "0x40078000",
			"description": "Reset Generation Module",
			"helpers": "",
			"registers": {
				"DES" : {
					"offset": "0x0",
					"reset": "0x1"
				},
				"FES" : {
					"offset": "0x8",
					"reset": "0x0"
				}

			},
			"size":"0x200"
		},
		"RDC":{
			"soc": "s32g2",
			"name": "rdc",
			"offset" : "0x40080000",
			"description": "Reset Domain Controller",
			"helpers": "",
			"registers": {
				"RD1_CTRL" : {
					"offset": "0x4",
					"reset": "0xf"
				},
				"RD2_CTRL" : {
					"offset": "0x8",
					"reset": "0xf"
				},
				"RD3_CTRL" : {
					"offset": "0xC",
					"reset": "0xf",
					"action": "if((val&0x8)==0x8)PERFORM_WRITE(REG_RD3_STAT, 0x18);\nif((val&0x8)==0)PERFORM_WRITE(REG_RD3_STAT, 0);"
				},
				"RD1_STAT" : {
					"offset": "0x84",
					"reset": "0x18",
					"action":"ignore"
				},
				"RD2_STAT" : {
					"offset": "0x88",
					"reset": "0x18",
					"action":"ignore"
				},
				"RD3_STAT" : {
					"offset": "0x8c",
					"reset": "0x18",
					"action":"ignore"
				}

			},
			"size":"0x100"
		},
		"LINFlex":{
			"soc": "s32g2",
			"name": "linFlex",
			"offset" : ["0x401C8000", "0x401CC000", "0x402BC000"],
			"description": "LinFlexD",
			"helpers": "static unsigned int in_init=0;\nstatic unsigned int is_master=0;\nstatic unsigned int uart_mode=0;\nstatic unsigned int tx_fifo_mode=0;\nunsigned int tx_enable=0;",
			"registers": {
				"LINCR1" : {
					"offset": "0x0",
					"reset": "0x82",
					"action":"if((val&0x1)==0x1) { in_init=1; PERFORM_WRITE(REG_LINSR, 1<<12);} else { in_init=0;};\nif((val&0x10)==0x10) { is_master=1;} else { is_master=0;}"
				},
				"LINSR" : {
					"offset": "0x8",
					"reset": "0x40",
					"action":"ignore"
				},
				"UARTCR1" : {
					"offset": "0x10",
					"reset": "0x0",
					"action":"if(in_init==0x1){ if((val&0x1)==0x1) { uart_mode=1;} else { uart_mode=0;}\nif((val&(BIT(8)))==1){tx_fifo_mode=1;} else { tx_fifo_mode=0; }\n if((val&(BIT(4)))==1){tx_enable=0;} else { tx_enable=0; }}"
				},
				"BDRL" : {
					"offset": "0x38",
					"reset": "0x0",
					"action":"printf(\"%c\", (int)val);return; /* TODO: How to use qemu serial output? */"
				}

			},
			"size":"0x100",
			"min_access":1
		},
		"DDRSS":{
			"soc": "s32g2",
			"name": "ddrss",
			"offset" : "0x403C0000",
			"description": "DDR Subsystem",
			"helpers": "",
			"registers": {
				"STAT" : {
					"offset": "0x4",
					"reset": "0x0",
					"action":"ignore"
				},
				"DFIMISC" : {
					"offset": "0x1b0",
					"reset": "0x41",
					"action":"if((val&BIT(5))==BIT(5)) PERFORM_WRITE(REG_DFISTAT, BIT(0));\nif((val&BIT(0))==BIT(0)) PERFORM_WRITE(REG_STAT, 1);"
				},
				"DFISTAT" : {
					"offset": "0x1bc",
					"reset": "0x0",
					"action":"ignore"
				},
				"SWCTL" : {
					"offset": "0x320",
					"reset": "0x0",
					"action":"PERFORM_WRITE(REG_SWSTAT, val);"
				},
				"SWSTAT" : {
					"offset": "0x324",
					"reset": "0x0",
					"action":"ignore"
				},
				"SBRCTL" : {
					"offset": "0xf24",
					"reset": "0x0",
					"action":"if((val&BIT(0))==BIT(0)) PERFORM_WRITE(REG_SBRSTAT, BIT(1));"
				},
				"SBRSTAT" : {
					"offset": "0xf28",
					"reset": "0x0",
					"action":"ignore"
				}

			},
			"size":"0x1000",
			"min_access":1
		},
		"DDRPHY":{
			"soc": "s32g2",
			"name": "ddrphy",
			"offset" : "0x40380000",
			"description": "DDR PHY",
			"helpers": "",
			"registers": {
				"NAME1" : {
					"offset": "0x420",
					"reset": "0x0",
					"action":"PERFORM_WRITE(REG_UCTSHADOW, 0);"
				},
				"NAME2" : {
					"offset": "0x40c",
					"reset": "0x0",
					"action":"PERFORM_WRITE(REG_UCTSHADOW, 1);"
				},
				"UCTSHADOW" : {
					"offset": "0x404",
					"reset": "0x0",
					"action":"ignore"
				},
				"UCTWRITEONLY" : {
					"offset": "0x410",
					"reset": "0x7"
				}

			},
			"size":"0x10000",
			"min_access":1
		}
	}
}
